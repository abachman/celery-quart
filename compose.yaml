volumes:
  postgres_data:
  app_venv:
  uv_cache:
  node_modules:

services:
  web: &web
    build: .
    ports:
      - "5000:5000"
    volumes:
      - .:/app
      - app_venv:/app/.venv
      - uv_cache:/root/.cache/uv
    env_file:
      - .env.local
    depends_on:
      - redis
      - postgres
    command: ["quart", "run", "--host", "0.0.0.0", "--port", "5000"]

  frontend:
    build: ./client
    ports:
      - "4000:3000"
    volumes:
      - ./client/.:/app
      - node_modules:/app/node_modules
    depends_on:
      - web
    command: ["npm", "run", "dev"]

  worker:
    <<: *web
    ports: []
    command:
      [
        "celery",
        "-A",
        "src.create_worker.worker",
        "worker",
        "--loglevel",
        "debug",
      ]

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
      - "6380:6380"

  postgres:
    image: pgvector/pgvector:pg16
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=prompter
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
